#!/bin/sh
PATH="/sbin:/bin:/usr/bin:/usr/sbin"
RETVAL=0

# --------------- Start of configurations ---------------------
# --------------- Please configure following paramters --------
#The absolute directory path where the java is installed
# ex : JAVA_HOME="/home/user/software/jdk1.7.0_25"
JAVA_HOME=@java.home.dir@
#The abolute directory path where the application executables are.
# ex : APP_HOME="/home/user/app"
APP_HOME=@app.install.dir@
#APP process belongs to this user
# ex : APP_USER="user1"
APP_USER=@app.user.name@
#Where is the application process id should be written to.
# ex : APP_PIDFILE="/var/run/myappp.pid"
APP_PIDFILE=@app.pid.file@
#Location of the logs generated by opreting system. Should be exsisting directory.
# ex : APP_LOG_DIR="${APP_HOME}/syslog"
APP_LOG_DIR=@app.syslog.dir@
#Where is the application configuration files are.( if such files are )
# ex : APP_CONF_DIR="${APP_HOME}/conf"
APP_CONF_DIR=@config.folder.location@
#Main class of the application with package name as well.
# ex : APP_MAIN_CLASS="org.java.app.MainClass"
APP_MAIN_CLASS=@app.main.class@
# ----------------- Configuration section is over --------------.

JAVACMD="${JAVA_HOME}/bin/java"
APP_LIB="${APP_HOME}/lib"
LOCALCLASSPATH="${APP_LIB}:${APP_HOME}/app.jar:${APP_CONF_DIR}"
APP_RUN_CMD="${JAVACMD} -cp \"${LOCALCLASSPATH}\" com.app.MainClass"

start() {

    OLD_PWD=`pwd`
	cd $APP_LOG_DIR

    # Check if the service is already running. We look only for the pid file
    pid=`cat $APP_PIDFILE 2>&1`
    if [ "$?" = "0" ]; then
        echo "application is already running. Remove $APP_PIDFILE if you know this to be untrue."
        RETVAL=1
        return
    fi

    # Start application service.
    echo -n "Starting application: "

	rm -f nohup.out
	su -s /bin/sh -c "nohup $APP_RUN_CMD > $APP_LOG_DIR/nohup.out 2>&1 &" $APP_USER
	RETVAL=$?

	PID=`ps aux | grep -v "grep" | grep "${APP_MAIN_CLASS}" | awk '{print $2}'`

	if [ $RETVAL -eq 0 -a ! -z "$PID" -a ! -z "$APP_PIDFILE" ]; then
		echo $PID > $APP_PIDFILE
	fi

	echo

	[ $RETVAL -eq 0 -a -d /var/lock/subsys ] && touch /var/lock/subsys/lsa

	sleep 1 # allows prompt to return
	cd $OLD_PWD

}

stop() {
	# Stop APP.
	echo -n "Shutting down application: "

	[ -f "$APP_PIDFILE" ] && kill `cat $APP_PIDFILE`
	RETVAL=$?
	echo

	[ $RETVAL -eq 0 -a -f "$APP_PIDFILE" ] && rm -f $APP_PIDFILE
	[ $RETVAL -eq 0 -a -f "/var/lock/subsys/lsa" ] && rm -f /var/lock/subsys/lsa
}

restart() {
	stop
	sleep 10 # give it a few moments to shut down
	start
}

condrestart() {
    echo -n "This action is not supported... "

}

reload() {
    echo -n "This action is not supported... "

}

status() {
    pid=`cat $APP_PIDFILE 2>&1`
	if [ "$?" = "1" ]; then
		echo "APP is not running..."
		RETVAL=0
	else
		ps -p $pid > /dev/null 2>&1
		if [ "$?" = "0" ]; then
			echo "APP is running....."
			RETVAL=0
		else
			echo "APP is not running...."
			RETVAL=0
		fi
	fi

}


# Handle how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	condrestart)
		condrestart
		;;
	reload)
		restart
		;;
	status)
		status
		;;
	*)
		echo "Usage $0 {start|stop|restart|status}"
		RETVAL=1
esac

exit $RETVAL